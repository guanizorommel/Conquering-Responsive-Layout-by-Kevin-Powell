

*{
    box-sizing: border-box;
  
}

body {
    margin: 0;
    font-family: Roboto, sans-serif;
    font-size: 1.3125rem;
}


.hero {
    background-color: #23424A;
    padding: 100px 0;
    color: #FFF;
    border: 2px solid red;
}



.container {
    width: 80%;
    max-width: 1000px;
    margin: 0 auto;
    border: 2px solid darkgoldenrod;
}

.hero__text {
    width: 60%;
    border: 2px solid pink;
}



h1 {
    font-size: 3rem;
    font-weight: 900;
}

p {
    margin-bottom: 3em;
}

.btn {
    display: inline-block;
    text-decoration: none;
    text-transform: uppercase;
    background-color: #38CFD9;
    color: #23424A;
    font-weight: 900;
    padding: .75em 2em;
    border-radius: 100px;
    text-align: center;
}

.btn:hover,
.btn:focus {
    opacity: .75;
    color: white;
}

.learntx {
    font-weight: 700;
    text-transform: uppercase;
}

.row {
    /*display: flex makes the container flex with default value of row*/
    display: flex;
    /*this is the default value of display:flex*/
    flex-direction: row;
    
    /*gap creates a gap in your flex items without issues. however, gap is only supported in firefox as of now*/
    /* gap: 50px; */
  
}

/*class + class. is a css that selects only the class that has adjacent element on left*/
/* as you can notice here. the two css element on right was selected because the first element in left has no column or element before it*/
.col + .col {
    background: darkkhaki;
    margin-left: 30px;
}

.col {
    /*since my parent row is now in flex. all of the elements inside in col will become flex items */
    /*flex items width are automatically populated based in the content*/
    /* if you created many flex items in col, it will overflow and will start to view sidewards.*/
    background: green;
    margin: 0 10px;
    /* if you put width:100%; this will create even width space in your content */
    width: 100%;
}